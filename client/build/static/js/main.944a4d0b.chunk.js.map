{"version":3,"sources":["utils/validateEmailFormat.js","components/elements.js","components/Welcome.js","components/Screenshots.js","components/NextSteps.js","App.js","serviceWorker.js","index.js"],"names":["validateEmailFormat","email","test","SectionContainer","styled","div","ScrollFullContainer","Section","Logo","img","Description","Error","Success","GetInvolved","Welcome","useState","setEmail","error","setError","success","setSuccess","showSubmitButton","setShowSubmitButton","src","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","e","target","value","id","aria-describedby","placeholder","autoCapitalize","FormHelperText","Button","onClick","axios","post","ImagesContainer","Image","Screenshots","map","image","NextSteps","NavigationBar","NavigationItem","Link","Container","App","to","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.944a4d0b.chunk.js","sourcesContent":["\r\nconst validateEmailFormat = email => {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(email)\r\n}\r\n\r\nexport default validateEmailFormat","import styled from 'styled-components'\n\nexport const SectionContainer = styled.div`\n  text-align: center;\n  height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: calc(10px + 2vmin);\n  margin-top: 20px;\n  padding: 10px;\n  padding-bottom: 50px;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    width: 0px; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`\n\nexport const ScrollFullContainer = styled.div`\n  max-width: 600px;\n  height: 100%;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    width: 0px; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`\n\nexport const Section = styled.div`\n  width: 100%;\n  height: 33.33%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  max-width: 90%;\n  @media (max-width: 750px) {\n    width: 85%;\n    height: auto;\n    min-height: auto;\n    font-size: 14px;\n  }\n`\nexport const Logo = styled.img`\n  max-width: 500px;\n  @media (max-width: 750px) {\n    width: 90%;\n  }\n`\n\nexport const Description = styled(Section)`\n  align-items: flex-start;\n  text-align: start;\n  max-width: 500px;\n  line-height: 1.6;\n  font-size: 18px;\n  min-height: 270px;\n  @media (max-width: 750px) {\n    min-height: auto;\n  }\n`\n\nexport const Error = styled(Section)`\n  height: 50px;\n  font-size: 16px;\n  color: red;\n`\nexport const Success = styled(Section)`\n  height: 35px;\n  font-size: 16px;\n`\nexport const GetInvolved = styled(Section)`\n  height: 10%;\n  max-width: 450px;\n  padding-right: 50px;\n  // background: pink;\n  @media (max-width: 750px) {\n    // padding-right: 0;\n    width: 70%;\n  }\n`\n","import React, { useState } from 'react'\nimport '../App.css'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport validateEmailFormat from '../utils/validateEmailFormat'\nimport {\n  SectionContainer,\n  Logo,\n  Description,\n  Error,\n  Success,\n  GetInvolved,\n} from './elements'\n\nfunction Welcome() {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [showSubmitButton, setShowSubmitButton] = useState(true)\n\n  return (\n    <SectionContainer>\n      <Logo src='pingpongbudsLogo1.png' />\n      <Description>\n        PingPongBuddies is a mobile application that connects people who want to\n        play ping pong!\n        <br />\n        <br />\n        âœ“ One on one interactions\n        <br />\n        âœ“ Distance\n        <br />\n        âœ“ Chat\n        <br /> <br />\n        Leave your email below and we'll let you know once it's live!\n        <br />\n        <br />\n      </Description>\n      <GetInvolved>\n        <FormControl fullWidth>\n          <InputLabel htmlFor='my-input'>Email address</InputLabel>\n          <Input\n            onChange={(e) => setEmail(e.target.value)}\n            fullWidth\n            id='my-input'\n            aria-describedby='my-helper-text'\n            placeholder='E-mail'\n            autoCapitalize='none'\n          />\n          <FormHelperText id='my-helper-text'>\n            We'll never share your email.\n          </FormHelperText>\n          {showSubmitButton ? (\n            <Button\n              onClick={() => {\n                if (validateEmailFormat(email)) {\n                  axios.post('/email', { email })\n                  setSuccess(true)\n                  setError(false)\n                  setShowSubmitButton(false)\n                } else setError(true)\n              }}\n            >\n              Submit\n            </Button>\n          ) : (\n            <Success>\n              {success && 'Your email has been submitted successfuly! ðŸ¤©'}\n            </Success>\n          )}\n        </FormControl>\n      </GetInvolved>\n      <Error>{error && 'Please make sure the email format is correct'}</Error>\n    </SectionContainer>\n  )\n}\n\nexport default Welcome\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ImagesContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  @media (max-width: 750px) {\n    flex-direction: column;\n  }\n`\nconst Image = styled.div`\n  width: 350px;\n  height: 500px;\n  background: whitesmoke;\n  border: 2px solid black;\n  margin: 10px;\n  flex-shrink: 0;\n  margin-top: 20px;\n  flex-direction: row;\n  @media (max-width: 400px) {\n    width: 85%;\n    height: 90%;\n    font-size: 14px;\n  }\n`\nfunction Screenshots() {\n  const images = ['1', '2', '3', '4', '6']\n  return (\n    <ImagesContainer>\n      {images.map((image) => (\n        <Image>{image}</Image>\n      ))}\n    </ImagesContainer>\n  )\n}\n\nexport default Screenshots\n","import React from 'react'\nimport { SectionContainer, ScrollFullContainer } from './elements'\n\nfunction NextSteps() {\n  return (\n    <SectionContainer>\n      <ScrollFullContainer>\n        <p>\n          PingPongBuddies is only the start! The broader vision is to create an\n          app where people can find other people for any activity they wish:\n          From ping pong to playing chess, going to the fleamarket or even\n          co-working in a cafe!\n        </p>\n        <h2>Timeline</h2>\n        <h3>1.</h3> Finish the development of PingPongBuddies.\n        <br />\n        <h3>2.</h3>\n        Develop the app further to offer a wide variety of activities:\n        <h1>Buddies</h1>\n        <p>\n          So far, this is called \"Buddies\". A brand that reflects energy,\n          freshness, activeness, empowerment to all, trust and the feeling of an\n          international friendly community is on its way, including\n        </p>\n        <ul>\n          <li>Brand Name</li>\n          <li>Logo</li>\n          <li>Colors</li>\n          <li>UI</li>\n        </ul>\n        <p>Therefore I am currently looking for creative partners!</p>\n        <p>Sounds interesting/wanna get involved?</p>\n        <p>\n          Write me a message with wether you want to be a creative cofounder or\n          want to contribute as a freelancer. Don't forget to include your\n          Portfolio with samples of work and rates. Looking forward to hearing\n          from you!\n        </p>\n      </ScrollFullContainer>\n    </SectionContainer>\n  )\n}\n\nexport default NextSteps\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Welcome from './components/Welcome'\nimport Screenshots from './components/Screenshots'\nimport NextSteps from './components/NextSteps'\n\nconst NavigationBar = styled.div`\n  width: 100%;\n  position: fixed;\n  padding-top: 10px;\n  top: 0;\n  display: flex;\n  justify-content: flex-end;\n  height: 50px;\n  background: white;\n  justify-content: center;\n`\nconst NavigationItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  width: 110px;\n  color: black;\n  border-bottom: 2px solid black;\n  padding: 10px;\n  padding-bottom: 5px;\n  margin: 0 15px;\n  text-decoration: none;\n  font-size: 20px;\n  letter-spacing: 0.5px;\n  line-height: 1.6;\n  &: hover {\n    cursor: pointer;\n    background: whitesmoke;\n  }\n  @media (max-width: 750px) {\n    height: 20px;\n    width: 72px;\n    margin: 0 5px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n`\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  height: 90vh;\n  margin-top: 70px;\n  font-size: 18px;\n  @media (max-width: 750px) {\n    font-size: 14px;\n    width: 100%;\n    margin-top: 40px;\n  }\n`\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavigationBar>\n        <NavigationItem to='/welcome'>Welcome</NavigationItem>\n        <NavigationItem to='/screenshots'>Screenshots</NavigationItem>\n        <NavigationItem to='/nextsteps'>Next Steps</NavigationItem>\n      </NavigationBar>\n      <Container>\n        <Route exact path='/' render={() => <Welcome />} />\n        <Route exact path='/welcome' render={() => <Welcome />} />\n        <Route exact path='/screenshots' render={() => <Screenshots />} />\n        <Route exact path='/nextsteps' render={() => <NextSteps />} />\n      </Container>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}