{"version":3,"sources":["utils/validateEmailFormat.js","components/elements.js","components/Welcome.js","components/Screenshots.js","components/NextSteps.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["validateEmailFormat","email","test","SectionContainer","styled","div","StyledALink","a","ScrollFullContainer","Section","Logo","img","Description","Error","Success","GetInvolved","NavigationButtonItem","Link","ButtonItem","Welcome","useState","setEmail","error","setError","success","setSuccess","showSubmitButton","setShowSubmitButton","src","FormControl","fullWidth","InputLabel","htmlFor","Input","onChange","e","target","value","id","aria-describedby","placeholder","autoCapitalize","FormHelperText","Button","onClick","axios","post","subject","message","name","ImagesContainer","Image","Screenshots","map","image","NextSteps","Fab","variant","to","useStyles","makeStyles","theme","root","display","flexDirection","paddingBottom","textField","marginLeft","spacing","marginRight","width","Contact","setName","setMessage","classes","href","className","TextField","label","defaultValue","margin","multiline","rows","NavigationBar","NavigationItem","Container","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"qSAMeA,EALa,SAAAC,GAE1B,MADS,wJACCC,KAAKD,I,y4FCAV,IAAME,EAAmBC,IAAOC,IAAV,KAiBhBC,EAAcF,IAAOG,EAAV,KAIXC,EAAsBJ,IAAOC,IAAV,KAWnBI,EAAUL,IAAOC,IAAV,KAePK,EAAON,IAAOO,IAAV,KAOJC,EAAcR,YAAOK,EAAPL,CAAH,KAYXS,EAAQT,YAAOK,EAAPL,CAAH,KAKLU,EAAUV,YAAOK,EAAPL,CAAH,KAIPW,EAAcX,YAAOK,EAAPL,CAAH,KAWXY,EAAuBZ,YAAOa,IAAPb,CAAH,KAmBpBc,EAAad,IAAOC,IAAV,KCtBRc,MApEf,WAAoB,IAAD,EACSC,mBAAS,IADlB,mBACVnB,EADU,KACHoB,EADG,OAESD,oBAAS,GAFlB,mBAEVE,EAFU,KAEHC,EAFG,OAGaH,oBAAS,GAHtB,mBAGVI,EAHU,KAGDC,EAHC,OAI+BL,oBAAS,GAJxC,mBAIVM,EAJU,KAIQC,EAJR,KAMjB,OACE,kBAACxB,EAAD,KACE,kBAACO,EAAD,CAAMkB,IAAI,0BACV,kBAAChB,EAAD,gGAGE,6BACA,6BAJF,iCAME,6BANF,kBAQE,6BARF,cAUE,6BAVF,IAUS,6BAVT,gEAYE,6BACA,8BAEF,kBAACG,EAAD,KACE,kBAACc,EAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,iBACA,kBAACC,EAAA,EAAD,CACEC,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,QACnCP,WAAS,EACTQ,GAAG,WACHC,mBAAiB,iBACjBC,YAAY,SACZC,eAAe,SAEjB,kBAACC,EAAA,EAAD,CAAgBJ,GAAG,kBAAnB,iCAGCZ,EACC,kBAACiB,EAAA,EAAD,CACEC,QAAS,WACH5C,EAAoBC,IACtB4C,IAAMC,KAAK,SAAU,CACnB7C,QACA8C,QAAQ,mBACRC,QAAS,mBACTC,KAAM,YAERxB,GAAW,GACXF,GAAS,GACTI,GAAoB,IACfJ,GAAS,KAZpB,UAkBA,kBAACT,EAAD,KACGU,GAAW,6DAKpB,kBAACX,EAAD,KAAQS,GAAS,kD,kiBC9EvB,IAAM4B,EAAkB9C,IAAOC,IAAV,KASf8C,EAAQ/C,IAAOC,IAAV,KA0BI+C,MAXf,WAEE,OACE,kBAACF,EAAD,KAFa,CAAC,IAAK,IAAK,IAAK,IAAK,KAGxBG,KAAI,SAACC,GAAD,OACV,kBAACH,EAAD,KAAQG,Q,SCkBDC,MA5Cf,WACE,OACE,kBAACpD,EAAD,KACE,kBAACK,EAAD,KACE,8PAMA,wCACA,kCARF,8CASE,6BACA,kCAVF,iEAYE,uCACA,+NAKA,4BACE,0CACA,oCACA,sCACA,mCAEF,sFACA,qEACA,oPAMA,6BACA,kBAACgD,EAAA,EAAD,CAAKC,QAAQ,YACX,kBAACzC,EAAD,CAAsB0C,GAAG,YAAzB,e,kBCpBJC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,cAAe,SACfC,cAAe,QAEjBC,UAAW,CACTC,WAAYN,EAAMO,QAAQ,GAC1BC,YAAaR,EAAMO,QAAQ,GAC3BE,MAAO,YAgGIC,MA5Ff,WAAoB,IAAD,EACSnD,mBAAS,IADlB,mBACVnB,EADU,KACHoB,EADG,OAEOD,mBAAS,IAFhB,mBAEV6B,EAFU,KAEJuB,EAFI,OAGapD,mBAAS,IAHtB,mBAGV4B,EAHU,KAGDyB,EAHC,OAISrD,oBAAS,GAJlB,mBAIVE,EAJU,KAIHC,EAJG,OAKaH,oBAAS,GALtB,mBAKVI,EALU,KAKDC,EALC,OAM+BL,oBAAS,GANxC,mBAMVM,EANU,KAMQC,EANR,KAOX+C,EAAUf,IAEhB,OACE,kBAACxD,EAAD,KACE,kBAACO,EAAD,CAAMkB,IAAI,0BACV,kBAAChB,EAAD,oDAEE,6BACA,kDACA,kBAACN,EAAD,CAAaqE,KAAK,+BAA+BvC,OAAO,UAAxD,uBACuB,KAEvB,6BACA,+CARF,2BASE,6BACA,wDACA,6BAXF,IAWS,8BAGT,yBAAKwC,UAAWF,EAAQZ,MACtB,kBAACe,EAAA,EAAD,CACEC,MAAM,YACN5C,SAAU,SAACC,GAAD,OAAOsC,EAAWtC,EAAEC,OAAOC,QACrCC,GAAG,uBACHyC,aAAa,IACbH,UAAWF,EAAQR,UACnBT,QAAQ,WACRuB,OAAO,QACPC,WAAS,EACTC,KAAM,IAER,6BACA,kBAACL,EAAA,EAAD,CACEC,MAAM,SACN5C,SAAU,SAACC,GAAD,OAAOqC,EAAQrC,EAAEC,OAAOC,QAClCC,GAAG,wBACHyC,aAAa,IACbH,UAAWF,EAAQR,UACnBT,QAAQ,WACRuB,OAAO,UAET,6BACA,kBAACH,EAAA,EAAD,CACEC,MAAM,UACN5C,SAAU,SAACC,GAAD,OAAOd,EAASc,EAAEC,OAAOC,QACnCC,GAAG,wBACHyC,aAAa,IACbH,UAAWF,EAAQR,UACnBc,OAAO,QACPvB,QAAQ,cAGX/B,EACC,kBAAC8B,EAAA,EAAD,CACEc,MAAM,QACNb,QAAQ,WACRb,QAAS,WACH5C,EAAoBC,IAAUgD,GAAQD,GACxCH,IAAMC,KAAK,SAAU,CACnB7C,QACAgD,OACAD,UACAD,QAAS,uBAEXtB,GAAW,GACXF,GAAS,GACTI,GAAoB,IACfJ,GAAS,KAGlB,kBAACL,EAAD,CAAYwC,GAAG,YAAf,SAGF,kBAAC5C,EAAD,KACGU,GAAW,2DAGhB,kBAACX,EAAD,KACGS,GACC,gF,imCCjHV,IAAM6D,GAAgB/E,IAAOC,IAAV,MAWb+E,GAAiBhF,YAAOa,IAAPb,CAAH,MAyBdiF,GAAYjF,IAAOC,IAAV,MAkCAiF,OApBf,WACE,OACE,kBAAC,IAAD,KACE,kBAACH,GAAD,KACE,kBAACC,GAAD,CAAgB1B,GAAG,YAAnB,WACA,kBAAC0B,GAAD,CAAgB1B,GAAG,gBAAnB,eACA,kBAAC0B,GAAD,CAAgB1B,GAAG,cAAnB,cACA,kBAAC0B,GAAD,CAAgB1B,GAAG,YAAnB,YAEF,kBAAC2B,GAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,SAC3C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAM,kBAAC,EAAD,SAC/C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM,kBAAC,EAAD,SAC7C,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,YC7D/BC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnF,GACLoF,QAAQpF,MAAMA,EAAM0B,a","file":"static/js/main.06c5c154.chunk.js","sourcesContent":["\r\nconst validateEmailFormat = email => {\r\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n  return re.test(email)\r\n}\r\n\r\nexport default validateEmailFormat","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nexport const SectionContainer = styled.div`\n  text-align: center;\n  height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  font-size: calc(10px + 2vmin);\n  margin-top: 20px;\n  padding: 10px;\n  padding-bottom: 50px;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    width: 0px; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`\nexport const StyledALink = styled.a`\n  color: black;\n  text-decoration: none;\n`\nexport const ScrollFullContainer = styled.div`\n  max-width: 600px;\n  height: 100%;\n  overflow: scroll;\n  font-size: 18px;\n  ::-webkit-scrollbar {\n    width: 0px; /* Remove scrollbar space */\n    background: transparent; /* Optional: just make scrollbar invisible */\n  }\n`\n\nexport const Section = styled.div`\n  width: 100%;\n  height: 33.33%;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  max-width: 90%;\n  @media (max-width: 750px) {\n    width: 85%;\n    height: auto;\n    min-height: auto;\n    font-size: 14px;\n  }\n`\nexport const Logo = styled.img`\n  max-width: 500px;\n  @media (max-width: 750px) {\n    width: 90%;\n  }\n`\n\nexport const Description = styled(Section)`\n  align-items: flex-start;\n  text-align: start;\n  max-width: 500px;\n  line-height: 1.6;\n  font-size: 18px;\n  min-height: 270px;\n  @media (max-width: 750px) {\n    min-height: auto;\n  }\n`\n\nexport const Error = styled(Section)`\n  height: 50px;\n  font-size: 16px;\n  color: red;\n`\nexport const Success = styled(Section)`\n  height: 35px;\n  font-size: 16px;\n`\nexport const GetInvolved = styled(Section)`\n  height: 10%;\n  max-width: 450px;\n  padding-right: 50px;\n  // background: pink;\n  @media (max-width: 750px) {\n    // padding-right: 0;\n    width: 70%;\n  }\n`\n\nexport const NavigationButtonItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  width: 110px;\n  color: black;\n  padding: 10px;\n  padding-bottom: 5px;\n  margin: 0 15px;\n  text-decoration: none;\n  font-size: 20px;\n  letter-spacing: 0.5px;\n  @media (max-width: 750px) {\n    height: 20px;\n    width: 72px;\n    margin: 0 5px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n`\nexport const ButtonItem = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 110px;\n  color: black;\n  padding: 10px;\n  padding-bottom: 5px;\n  margin: 0 15px;\n  text-decoration: none;\n  font-size: 20px;\n  letter-spacing: 0.5px;\n  @media (max-width: 750px) {\n    height: 20px;\n    width: 72px;\n    margin: 0 5px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n`\n","import React, { useState } from 'react'\nimport '../App.css'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport validateEmailFormat from '../utils/validateEmailFormat'\nimport {\n  SectionContainer,\n  Logo,\n  Description,\n  Error,\n  Success,\n  GetInvolved,\n} from './elements'\n\nfunction Welcome() {\n  const [email, setEmail] = useState('')\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [showSubmitButton, setShowSubmitButton] = useState(true)\n\n  return (\n    <SectionContainer>\n      <Logo src='pingpongbudsLogo1.png' />\n      <Description>\n        PingPongBuddies is a mobile application that connects people who want to\n        play ping pong!\n        <br />\n        <br />\n        ✓ One on one interactions\n        <br />\n        ✓ Distance\n        <br />\n        ✓ Chat\n        <br /> <br />\n        Leave your email below and we'll let you know once it's live!\n        <br />\n        <br />\n      </Description>\n      <GetInvolved>\n        <FormControl fullWidth>\n          <InputLabel htmlFor='my-input'>Email address</InputLabel>\n          <Input\n            onChange={(e) => setEmail(e.target.value)}\n            fullWidth\n            id='my-input'\n            aria-describedby='my-helper-text'\n            placeholder='E-mail'\n            autoCapitalize='none'\n          />\n          <FormHelperText id='my-helper-text'>\n            We'll never share your email.\n          </FormHelperText>\n          {showSubmitButton ? (\n            <Button\n              onClick={() => {\n                if (validateEmailFormat(email)) {\n                  axios.post('/email', {\n                    email,\n                    subject:'sign me up email',\n                    message: 'sign me up email',\n                    name: 'no name',\n                  })\n                  setSuccess(true)\n                  setError(false)\n                  setShowSubmitButton(false)\n                } else setError(true)\n              }}\n            >\n              Submit\n            </Button>\n          ) : (\n            <Success>\n              {success && 'Your email has been submitted successfuly! 🤩'}\n            </Success>\n          )}\n        </FormControl>\n      </GetInvolved>\n      <Error>{error && 'Please make sure the email format is correct'}</Error>\n    </SectionContainer>\n  )\n}\n\nexport default Welcome\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst ImagesContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  @media (max-width: 750px) {\n    flex-direction: column;\n  }\n`\nconst Image = styled.div`\n  width: 350px;\n  height: 500px;\n  background: whitesmoke;\n  border: 2px solid black;\n  margin: 10px;\n  flex-shrink: 0;\n  margin-top: 20px;\n  flex-direction: row;\n  @media (max-width: 400px) {\n    width: 85%;\n    height: 90%;\n    font-size: 14px;\n  }\n`\nfunction Screenshots() {\n  const images = ['1', '2', '3', '4', '6']\n  return (\n    <ImagesContainer>\n      {images.map((image) => (\n        <Image>{image}</Image>\n      ))}\n    </ImagesContainer>\n  )\n}\n\nexport default Screenshots\n","import React from 'react'\nimport { SectionContainer, ScrollFullContainer } from './elements'\nimport Fab from '@material-ui/core/Fab'\n\nimport { NavigationButtonItem } from './elements'\n\nfunction NextSteps() {\n  return (\n    <SectionContainer>\n      <ScrollFullContainer>\n        <p>\n          PingPongBuddies is only the start! The broader vision is to create an\n          app where people can find other people for any activity they wish:\n          From ping pong to playing chess, going to the fleamarket or even\n          co-working in a cafe!\n        </p>\n        <h2>Timeline</h2>\n        <h3>1.</h3> Finish the development of PingPongBuddies.\n        <br />\n        <h3>2.</h3>\n        Develop the app further to offer a wide variety of activities:\n        <h1>Buddies</h1>\n        <p>\n          So far, this is called \"Buddies\". A brand that reflects energy,\n          freshness, activeness, empowerment to all, trust and the feeling of an\n          international friendly community is on its way, including\n        </p>\n        <ul>\n          <li>Brand Name</li>\n          <li>Logo</li>\n          <li>Colors</li>\n          <li>UI</li>\n        </ul>\n        <p>Therefore I am currently looking for creative partners!</p>\n        <p>Sounds interesting/wanna get involved?</p>\n        <p>\n          Write me a message with wether you want to be a creative cofounder or\n          want to contribute as a freelancer. Don't forget to include your\n          Portfolio with samples of work and rates. Looking forward to hearing\n          from you!\n        </p>\n        <br />\n        <Fab variant='extended'>\n          <NavigationButtonItem to='/contact'>Contact</NavigationButtonItem>\n        </Fab>\n      </ScrollFullContainer>\n    </SectionContainer>\n  )\n}\n\nexport default NextSteps\n","import React, { useState } from 'react'\nimport '../App.css'\nimport Input from '@material-ui/core/Input'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport axios from 'axios'\nimport validateEmailFormat from '../utils/validateEmailFormat'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport Fab from '@material-ui/core/Fab'\n\nimport {\n  SectionContainer,\n  Logo,\n  Description,\n  Error,\n  Success,\n  ButtonItem,\n  StyledALink,\n} from './elements'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: '20px',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: '25ch',\n  },\n}))\n\nfunction Contact() {\n  const [email, setEmail] = useState('')\n  const [name, setName] = useState('')\n  const [message, setMessage] = useState('')\n  const [error, setError] = useState(false)\n  const [success, setSuccess] = useState(false)\n  const [showSubmitButton, setShowSubmitButton] = useState(true)\n  const classes = useStyles()\n\n  return (\n    <SectionContainer>\n      <Logo src='pingpongbudsLogo1.png' />\n      <Description>\n        This project is created by Angeliki Patrinou\n        <br />\n        <h4>Portfolio Webpage </h4>\n        <StyledALink href='https://angelikipatrinou.com' target='_blank'>\n          angelikipatrinou.com{' '}\n        </StyledALink>\n        <br />\n        <h4>Get in touch on</h4>patrinoua [at] gmail.com\n        <br />\n        <h4>Or write a message below</h4>\n        <br /> <br />\n      </Description>\n\n      <div className={classes.root}>\n        <TextField\n          label='Message *'\n          onChange={(e) => setMessage(e.target.value)}\n          id='outlined-margin-none'\n          defaultValue=' '\n          className={classes.textField}\n          variant='outlined'\n          margin='dense'\n          multiline\n          rows={4}\n        />\n        <br />\n        <TextField\n          label='Name *'\n          onChange={(e) => setName(e.target.value)}\n          id='outlined-margin-dense'\n          defaultValue=' '\n          className={classes.textField}\n          variant='outlined'\n          margin='dense'\n        />\n        <br />\n        <TextField\n          label='Email *'\n          onChange={(e) => setEmail(e.target.value)}\n          id='outlined-margin-dense'\n          defaultValue=' '\n          className={classes.textField}\n          margin='dense'\n          variant='outlined'\n        />\n      </div>\n      {showSubmitButton ? (\n        <Fab\n          width='130px'\n          variant='extended'\n          onClick={() => {\n            if (validateEmailFormat(email) && name && message) {\n              axios.post('/email', {\n                email,\n                name,\n                message,\n                subject: 'Contact me message',\n              })\n              setSuccess(true)\n              setError(false)\n              setShowSubmitButton(false)\n            } else setError(true)\n          }}\n        >\n          <ButtonItem to='/contact'>Send</ButtonItem>\n        </Fab>\n      ) : (\n        <Success>\n          {success && 'Your email has been submitted successfuly! 🤩'}\n        </Success>\n      )}\n      <Error>\n        {error &&\n          'Please make sure the email format is correct and all the fields are filled'}\n      </Error>\n    </SectionContainer>\n  )\n}\n\nexport default Contact\n","import React from 'react'\nimport './App.css'\nimport { BrowserRouter, Route, Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Welcome from './components/Welcome'\nimport Screenshots from './components/Screenshots'\nimport NextSteps from './components/NextSteps'\nimport Contact from './components/Contact'\n\nconst NavigationBar = styled.div`\n  width: 100%;\n  position: fixed;\n  padding-top: 10px;\n  top: 0;\n  display: flex;\n  justify-content: flex-end;\n  height: 50px;\n  background: white;\n  justify-content: center;\n`\nconst NavigationItem = styled(Link)`\n  display: flex;\n  justify-content: center;\n  width: 110px;\n  color: black;\n  border-bottom: 2px solid black;\n  padding: 10px;\n  padding-bottom: 5px;\n  margin: 0 15px;\n  text-decoration: none;\n  font-size: 20px;\n  letter-spacing: 0.5px;\n  line-height: 1.6;\n  &: hover {\n    cursor: pointer;\n    background: whitesmoke;\n  }\n  @media (max-width: 750px) {\n    height: 20px;\n    width: 72px;\n    margin: 0 5px;\n    font-size: 13px;\n    flex-shrink: 0;\n  }\n`\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100vw;\n  height: 90vh;\n  margin-top: 70px;\n  font-size: 18px;\n  @media (max-width: 750px) {\n    font-size: 14px;\n    width: 100%;\n    margin-top: 40px;\n  }\n`\nfunction App() {\n  return (\n    <BrowserRouter>\n      <NavigationBar>\n        <NavigationItem to='/welcome'>Welcome</NavigationItem>\n        <NavigationItem to='/screenshots'>Screenshots</NavigationItem>\n        <NavigationItem to='/nextsteps'>Next Steps</NavigationItem>\n        <NavigationItem to='/contact'>Contact</NavigationItem>\n      </NavigationBar>\n      <Container>\n        <Route exact path='/' render={() => <Welcome />} />\n        <Route exact path='/welcome' render={() => <Welcome />} />\n        <Route exact path='/screenshots' render={() => <Screenshots />} />\n        <Route exact path='/nextsteps' render={() => <NextSteps />} />\n        <Route exact path='/contact' render={() => <Contact />} />\n      </Container>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}